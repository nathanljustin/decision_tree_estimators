
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plotting_example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plotting_example.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plotting_example.py:


============================
Tree Plotting Example
============================

An example of plotting a fit decision tree using :class:`odtlearn.utils.TreePlotter.TreePlotter`

.. GENERATED FROM PYTHON SOURCE LINES 8-38

.. code-block:: default

    import pandas as pd
    import numpy as np
    from sklearn.model_selection import train_test_split
    from odtlearn.StrongTree import StrongTreeClassifier
    from odtlearn.RobustTree import RobustTreeClassifier
    import matplotlib.pyplot as plt


    data = pd.read_csv("data/balance-scale_enc.csv")
    y = data.pop("target")

    X_train, X_test, y_train, y_test = train_test_split(
        data, y, test_size=0.33, random_state=42
    )


    stcl = StrongTreeClassifier(
        depth=4,
        time_limit=5,
        _lambda=0.51,
        benders_oct=True,
        num_threads=None,
        obj_mode="acc",
    )

    stcl.fit(X_train, y_train)

    stcl.plot_tree()
    plt.show()


.. GENERATED FROM PYTHON SOURCE LINES 39-88

.. code-block:: default


    X = np.array(
        [
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [1, 0],
            [1, 0],
            [1, 0],
            [1, 1],
            [0, 1],
            [0, 1],
        ]
    )
    y = np.array([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1])

    costs = np.array(
        [
            [1, 4],
            [1, 4],
            [1, 4],
            [1, 4],
            [1, 4],
            [4, 4],
            [4, 4],
            [4, 4],
            [4, 4],
            [4, 4],
            [4, 1],
            [4, 4],
            [4, 4],
        ]
    )


    robust_classifier = RobustTreeClassifier(
        depth=2,
        time_limit=10,
    )

    robust_classifier.fit(X, y, costs=costs, budget=5, verbose=False)
    robust_classifier.print_tree()

    robust_classifier.plot_tree()
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_auto_examples_plotting_example.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plotting_example.py <plotting_example.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plotting_example.ipynb <plotting_example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
